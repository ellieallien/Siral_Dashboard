---
title: "Research Department Meeting Data Unit Overview"
output:
  html_document:
    toc: true
    toc_float: true
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = FALSE)
library(purrr)
library(knitr)
library(ggplot2)
library(tibble)
library(dplyr)
as_countrylist<-function(x){
x$country<-substr(x$rcid,1,3)
x_countrylist<-x %>% split.data.frame(x$country)  
}

rcm$has_comment<-!(rcm$comment %in% c("", " ", NA))
rcm$days_since_validation[grepl("validated",rcm$status)]<-
  (Sys.Date()-lubridate::dmy(rcm$date.validated))[grepl("validated",rcm$status)]


rcm_cl<-as_countrylist(rcm)

delayed$days_delayed<-Sys.Date()-delayed$date.hqsubmission.planned.latest
delayed$country<-substr(delayed$rcid,1,3)
delayed_cl<-as_countrylist(delayed)

recently_validated<-rcm %>% filter(rcm$days_since_validation<=14)
recently_validated_cl<-as_countrylist(recently_validated)
inconsistencies_cl<-as_countrylist(inconsistencies)




countries<-c(names(rcm_cl),names(delayed_cl),names(inconsistencies_cl)) %>% unique %>% sort


```

```{r,results='asis', warning = FALSE, message=FALSE}
cat("# SUMMARY\n\n")

cat("validated in the last two weeks: <b>",nrow(recently_validated),"</b><br>")
cat("median days from submission to validation:<b>",median(lubridate::dmy(recently_validated$date.validated)-lubridate::ymd(recently_validated$date.hqsubmission.actual),na.rm = T),"</b><br>")
cat("maximum days from submission to validation:<b>",max(lubridate::dmy(recently_validated$date.validated)-lubridate::ymd(recently_validated$date.hqsubmission.actual),na.rm = T),"</b><br>")

cat("under review:<b>",length(grep("HQ|partner|field",rcm$status)),"</b><br>")
cat("delayed:<b>",nrow(delayed),"</b><br>")
cat("matrix inconsistencies:<b>",nrow(inconsistencies),"</b><br>")

cat("\n\n### How long did validations take?\n\n")


researchcyclematrix:::rcm_plot_validation_duration(rcm[Sys.Date()-lubridate::dmy(rcm$date.validated)<100,],unit = 'data')+scale_x_continuous(limits = c(0,80))+ggtitle('Submission to validation (Last 100 days)')+xlab('# Days')


ggplot(recently_validated)+geom_point(
  aes(x= lubridate::dmy(date.validated),
      y=as.numeric(
        -(lubridate::ymd(recently_validated$date.hqsubmission.actual)-lubridate::dmy(recently_validated$date.validated))),
      color = type
      )
  )+
  theme_minimal()+
  xlab("date validated")+ylab("days until validation")+facet_grid(cols=vars(unit))




cat("\n\n### Delays\n\n")


ggplot2::ggplot(delayed,aes(x=days_delayed,y=country,color=unit))+geom_jitter(height=0.2,width=7,alpha=0.5)+
  theme_minimal()+scale_x_continuous("days passed planned submission date")+
  theme(axis.text.y  = element_text(size=6))+
  geom_text(aes(label=file.id),hjust=0.5,angle=0,nudge_y=-0.5,size=2,check_overlap = T)
# ggplot2::facet_grid(. ~ country)+coord_flip()



cat("\n\n### total number of Comments\n\n")

coms<-rcm %>% filter(has_comment)
rcm$country<-substr(rcm$rcid,1,3)
ggplot(rcm,aes(x = country,fill=type))+geom_bar()+theme_minimal()+theme(legend.position = "right")+coord_flip()+scale_fill_discrete(name="type",label=c(`FALSE`="no",`TRUE`="yes"))

cat("\n\n### RCM inconsistencies\n\n")

inconsistencies$country<-substr(inconsistencies$rcid,1,3)
ggplot(inconsistencies,aes(x = country,fill=issue))+geom_bar()+theme_minimal()+theme(legend.position = "right")+coord_flip()





```




```{r,results='asis'}

cat("# GLOBAL LISTS\n\n")


cat(paste("### Delays (planned date passed & not received)","\n\n"))
  if(nrow(delayed)==0){cat(crayon::silver("no known delays\n\n"))}else{
    kable(delayed %>% arrange(desc(days_delayed)) %>% select(rcid,file.id,days_delayed,comment),format = "markdown") %>% print
  }


cat("\n\n### Under Review")

rcm %>% filter(grepl("hq|partner|field",status,ignore.case = T)) %>%
                 dplyr::select(rcid,file.id,comment,date.hqsubmission.actual,status) %>%
                 dplyr::arrange(status,date.hqsubmission.actual,rcid) %>% 
                 knitr::kable(format = "markdown")


cat("\n\n### Validated Recently")

recently_validated %>% select(rcid,file.id,comment,date.validated) %>% dplyr::arrange(date.validated,rcid) %>%  knitr::kable(format = "markdown") %>% kableExtra::kable_styling()


  cat(paste("\n\n### RCM inconsistencies","\n\n"))
      if(nrow(inconsistencies)==0){cat(crayon::silver("no known inconsistencies\n\n"))}else{
  kable(inconsistencies,format = "markdown") %>% print
  
}


  
    # cat(paste("### Comments","\n\n"))
    # 
    # if((nrow(rcm)==0) | !any(rcm$has_comment==T)){cat(crayon::silver("no comments\n\n"))}else{
    #   
    # rcm %>% filter(has_comment) %>% select(rcid,file.id,comment) %>% arrange(rcid) %>% kable(format = "markdown") %>% print
    #   
    #   
    # }


```



```{r,results='asis'}
  cat("# BY COUNTRY\n\n")

for(country in countries){
  
  cat(paste("##",country,"\n\n"))
  
cat(paste("\n\n### Recently Validated (2 weeks)","\n\n"))
      if(is.null(recently_validated_cl[[country]])){cat(crayon::silver("no items\n\n"))}else{

  kable(recently_validated_cl[[country]] %>% select(rcid,file.id,comment,days_since_validation) %>% dplyr::arrange(days_since_validation),format = "markdown") %>% print
  
}
  
cat(paste("\n\n### Under Review","\n\n"))

      if(is.null(rcm_cl[[country]])){cat(crayon::silver("no items for this country\n\n"))}else{
  under_review<-rcm_cl[[country]]
under_review<-under_review[grepl("HQ|field|partner",under_review$status,ignore.case = T),,drop=F]

if(nrow(under_review)==0){cat("no items under review")}

under_review<-under_review %>% select(rcid,file.id,date.hqsubmission.actual) %>% dplyr::arrange(lubridate::ymd(date.hqsubmission.actual))
  kable(under_review,format = "markdown") %>% print
  
}
  
  
  cat(paste("\n\n### RCM inconsistencies","\n\n"))
      if(is.null(inconsistencies_cl[[country]])){cat(crayon::silver("no known inconsistencies\n\n"))}else{

  kable(inconsistencies_cl[[country]],format = "markdown") %>% print
  
}
  cat(paste("\n\n### Delays","\n\n"))
    if(is.null(delayed_cl[[country]])){cat(crayon::silver("no known delays\n\n"))}else{
  
      knitr::kable(delayed_cl[[country]] %>% dplyr::arrange(desc(days_delayed)) %>% dplyr::select(rcid,file.id,days_delayed),format = "markdown") %>% print
    }
  
    cat(paste("\n\n### Comments","\n\n"))
    
    if(is.null(rcm_cl[[country]]) | !any(rcm_cl[[country]]$has_comment==T)){cat(crayon::silver("no comments\n\n"))}else{

rcm_cl[[country]] %>% filter(has_comment) %>% select(rcid,file.id,comment) %>% arrange(rcid) %>% kable(format = "markdown") %>% print
      
      
    }

  
  
}
```



```{r,results='asis'}
cat('

<style type="text/css">
	
h2{
	background: #000000;
	color: #FFFFFF;
  
}
	
h3{
	background: #999999;
	color: #FFFFFF;
  
}
</style>')

```
